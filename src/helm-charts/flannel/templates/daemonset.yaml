{{ range $arch, $config := .Values.clusterNodes }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-flannel-ds-{{ $arch }}
  namespace: {{ default "kube-system" $.Release.Namespace }}
  labels:
    tier: node
    app: {{ $.Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        tier: node
        app: {{ $.Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - {{ $arch }}
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: {{ default "flannel" $.Values.serviceAccount }}
      initContainers:
      - name: install-cni
        image: {{ default "quay.io/coreos/flannel" .image }}:{{ default "v0.12.0-amd64" .imageTag }}
        command:
        - cp
        args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel
        image: {{ default "quay.io/coreos/flannel" $config.image }}:{{ default "v0.12.0-amd64" $config.imageTag }}
        command:
        - /opt/bin/flanneld
        args:
        - --ip-masq
        - --kube-subnet-mgr
        resources:
          requests:
            cpu: {{ default "100m" $config.cpu }}
            memory: {{ default "50Mi" $config.memory }}
          limits:
            cpu: {{ default "100m" $config.cpu }}
            memory: {{ default "50Mi" $config.memory }}
        securityContext:
          privileged: false
          capabilities:
            add: {{ $.Values.containerCapabilities }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run/flannel
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      volumes:
        - name: run
          hostPath:
            path: /run/flannel
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: flannel-cfg
          configMap:
            name: kube-flannel-cfg
---
{{ end }}